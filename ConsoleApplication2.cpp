#include <iostream>
#include <string>
#include <queue>
#include <unordered_map>
using namespace std;

// A Tree node
struct Node
{
	char ch;
	int freq;
	Node* left, * right;
};

// Function to allocate a new tree node
Node* getNode(char ch, int freq, Node* left, Node* right)
{
	Node* node = new Node();

	node->ch = ch;
	node->freq = freq;
	node->left = left;
	node->right = right;

	return node;
}

// Comparison object to be used to order the heap
struct comp
{
	bool operator()(Node* l, Node* r)
	{
		// highest priority item has lowest frequency
		return l->freq > r->freq;
	}
};

// Левый обход дерева
void encode(Node* root, string str,
	unordered_map<char, string>& huffmanCode)
{
	if (root == nullptr)
		return;

	// found a leaf node
	if (!root->left && !root->right) {
		huffmanCode[root->ch] = str;
	}

	encode(root->left, str + "0", huffmanCode);
	encode(root->right, str + "1", huffmanCode);
}

// traverse the Huffman Tree and decode the encoded string
void decode(Node* root, int& index, string str)
{
	if (root == nullptr) {
		return;
	}

	// found a leaf node
	if (!root->left && !root->right)
	{
		cout << root->ch;
		return;
	}

	index++;

	if (str[index] == '0')
		decode(root->left, index, str);
	else
		decode(root->right, index, str);
}

void buildHuffmanTree(string text)
{
	// Считаем частоту каждого символа и сохраняем в контейнер map
	unordered_map<char, int> freq;
	for (char ch : text)
		freq[ch]++;

	int t_sum = 0;
	for (auto i : freq)
	{
		cout << i.first << " " << i.second << " ";
		t_sum += i.second;
	}
	cout << endl << t_sum << endl;
	// Создаем приоритетную очередь для хранения активных узлов дерева
	priority_queue<Node*, vector<Node*>, comp> pq;

	// Создаем листовой узел для каждого символа и добавляем в приоритетную очередь
	for (auto pair : freq)
	{
		pq.push(getNode(pair.first, pair.second, nullptr, nullptr));
	}

	// делать до тех пор, пока в очереди не будет более одного узла
	while (pq.size() != 1)
	{
		// Удаляем два узла с наивысшим приоритетом
		// (самая низкая частота) из очереди
		Node* left = pq.top(); pq.pop();
		Node* right = pq.top();	pq.pop();

		// Создаем новый внутренний узел с этими двумя узлами
		// как дочерние и с частотой, равной сумме
		// частот двух узлов. Добавляем новый узел
		// в приоритетную очередь.
		int sum = left->freq + right->freq;
		pq.push(getNode('\0', sum, left, right));
	}

	// root хранит указатель на корень дерева Хаффмана
	Node* root = pq.top();

	// Проходим по дереву Хаффмана и сохраняем коды Хаффмана
	unordered_map<char, string> huffmanCode;
	encode(root, "", huffmanCode);

	cout << "Huffman Codes are :\n" << '\n';
	for (auto pair : huffmanCode)
	{
		cout << pair.first << " " << pair.second << " ";
	}

	cout << "\nDecoded string was :\n" << text << '\n';

	// Вывод закодированной строки
	string str = "";
	for (char ch : text)
	{
		str += huffmanCode[ch];
	}

	cout << "\nEncoded string is :\n" << str << '\n';

	// traverse the Huffman Tree again and this time
	// decode the encoded string
	int index = -1;
	cout << "\nDecoded string is: \n";
	while (index < (int)str.size() - 2)
	{
		decode(root, index, str);
	}
}

int main()
{
	setlocale(LC_ALL, "RUS");
	string text = "диспетчерской и я оставил бы след город обрывается внезапно  словно стену дворцов и небоскребов отсекают  исполинским ножом кол цевая дорога за ней  лес густой дремучий  отделяющий от суеты тех кто не хочет себя афишироват   притормози  говорю я когда мы минуем манговые заросли и проезжаем мимо  вполне среднерусской чащобы  у следующей тропинки  до квартала  ал кабар  еще далеко  говорит водител   останови машина останавливается я открываю двер  отхожу от лимузина на шаг водител   покорно ждет и я тоже  просвета на дороге зачем нам свидетели вот наконец то я целюс  в машину стреляю револ вер б ет негромко отдача слабая но машина  мгновенно вспыхивает водител  сидит глядя перед собой нескол ко секунд  и у   диппроводника  становится одним такси мен ше хорошо пуст  все выглядит как развлечение п яной шпаны я иду в лес  неэтично  бормочет из булавок  виндоусхоум   ты оптимизировалас   да  все тепер  мне нужна помощ  ищи тайник код  иван   светящееся дерево  сообщает программа я озираюс  ага вот он огромный дуб мерцающий колдовским синим светом  мерцающий лиш  для меня я подхожу к нему засовываю руку в дупло вынимаю  бол шой тяжелый сверток переодеваюс  в полотняную белую рубаху и штаны  подпоясываюс  узорчатым поясом короткий меч в ножнах нескол ко вещичек в  карманах тайник я создал пару дней назад незаконно испол зовав один из  комп ютеров транспортного управления закавказской железной дороги там слабые  программисты они долго не заметят этого мален кого вторжения  где ручей  спрашиваю я  справа я склоняюс  над бегущей водой смотрю в отражение нескол ко раз б ю по нему  ладон ю потом начинаю водит  пал цем стирая свой облик вместо меня из  дрожащего зеркала прорисовывается русоволосый статный крепыш лицо добродушно и  незатейливо до отвращения  спасибо  говорю я программе выпрямляюс  стою любуюс  лесом черт воз ми  как давно я не выбирался из городского смрада  не меня ли ты ждеш  добрый молодец  спрашивают изза спины оборачиваюс    из густых кустов выходит огромный по груд  мне ростом волк  может и тебя  говорю я любуяс  волком черт воз ми великолепен  он  действител но серый и не просто серый  именно чернистого с просед ю волч его  цвета коегде шерст  свалялас  к передней правой лапе пристал репейник  а не съест  ли мне тебя добрый молодец  спрашивает волк и скалится клыки  желтые как зубы курил щика один обломлен под корен  матерый опытный волчище  что ты попусту похваляеш ся на богатырский меч нарываеш ся  импровизирую я   лучше службу сослужи  волк улыбается садится  а чем расплатиш ся богатыр   по три тысячи зеленых  сообщаю я волк удовлетворенно кивает трет лапой  морду спрашивает    ал кабар   угадал  миссия  кража  а кто заказчик я пожимаю плечами ответ стол  же риторический как и вопрос заказчики огласки  не любят  попробуем  решает волк  ты готов  вполне  садис  я забираюс  на спину волка и тот неторопливой рысцой бежит по лесу я  инстинктивно уворачиваюс  от веток волк тонко хихикает ладно пуст  веселится через пару минут мы выскакиваем из леса под ногами  желтый песок жарко очен   жарко порывы ветра заставляют щурит ся впереди  пропаст  метров в сто  шириной за ней  восточный город минареты купола все в оранжевожелто зеленых тонах довол но красиво невдалеке через пропаст  переброшен хм  ну назовем это мостом тонкая как струна нит  один ее конец кончается на  стене опоясывающей город другой держит в руке безобразная каменная статуя  метров десяти вышиной морда у статуи отвратител ная  еще та будет работка  замечает волк  ты не продешевил иванцаревич  а бог его знает  изучая статую говорю я  о мосте меня предупредили  что вороват то  наливные яблочки  а вот к чему такой маскарад  волк снова хихикает  а что в яблочках  не знаю  я спрыгиваю со спины волка стою держа руку на  шерсти  слушай я на секунду лимонада поп ю  валяй  озираяс  говорит волк я прикрываю глаза глубинаглубина я не твой отпусти меня глубина я дернулся встал перед глазами  крошечные экранчики на них  пустыня  пропаст  статуя город вдали очен  неплохо нарисовано у  ал кабара  хорошие  дизайнеры виртуал ный шлем тяжелый это самая  навороченная  модел  из серийно выпускаемых   сони  с прекрасными цветными экранами великолепными динамиками и встроенным  микрофоном с кондиционером обдувающим лицо воздухом нужной температуры сейчас  это жар пустыни я снял шлем положил на стол рядом с клавиатурой комп ютера  на мониторе появилос  знакомое женское лицо из динамиков донеслос    леня ты прерываеш  погружение  нет жди в реал ном мире моя комнатка такая же как и в виртуал ном простра";
	buildHuffmanTree(text);

	return 0;
}